<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [stm32f401_1291\stm32f401_1291.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image stm32f401_1291\stm32f401_1291.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Sep 06 15:16:14 2018
<BR><P>
<H3>Maximum Stack Usage =        636 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; pps960_sensor_task &rArr; ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[1c9]">Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c9]">Error_Handler</a><BR>
 <LI><a href="#[61]">IIlIlIlI</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">PP_Reset</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[30]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[34]">DMA2_Stream0_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[35]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[36]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[37]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[38]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[3a]">DMA2_Stream5_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[3b]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[3c]">DMA2_Stream7_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[2d]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[1d]">EXTI9_5_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[40]">FPU_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[26]">I2C1_ER_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[25]">I2C1_EV_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[28]">I2C2_ER_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[27]">I2C2_EV_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[3f]">I2C3_ER_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[3e]">I2C3_EV_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[48]">LQ_abs_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[50]">LQ_arm_sincos_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[4c]">LQ_dot_prod_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[4b]">LQ_max_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[4a]">LQ_mean_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[49]">LQ_mult_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[47]">LQ_offset_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[46]">LQ_std_q31</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[45]">LQ_sum_f32</a> from lifeq_math.o(.text) referenced from lifeq_math.o(.text)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[39]">OTG_FS_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[2f]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[2e]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[31]">SDIO_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[33]">SPI3_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[41]">SPI4_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[43]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f401xc.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[1e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[21]">TIM1_CC_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[20]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[1f]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[22]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[23]">TIM3_IRQHandler</a> from stm32f4xx_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[24]">TIM4_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[32]">TIM5_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[51]">UART_DMAAbortOnError</a> from stm32f4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from stm32f4xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[3d]">USART6_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f401xc.o(.text) referenced from startup_stm32f401xc.o(RESET)
 <LI><a href="#[44]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xc.o(.text)
 <LI><a href="#[4e]">cosf</a> from cosf.o(i.cosf) referenced from lifeq_math.o(.text)
 <LI><a href="#[52]">fputc</a> from usart.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[42]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[4d]">sinf</a> from sinf.o(i.sinf) referenced from lifeq_math.o(.text)
 <LI><a href="#[4f]">sqrtf</a> from sqrtf.o(i.sqrtf) referenced from lifeq_math.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(.text)
</UL>
<P><STRONG><a name="[23a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[53]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[18b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[23c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[23d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[23e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[23f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[240]"></a>PP_GetAlgName</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>PP_GetVerMajor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>PP_GetVerMinor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>PP_GetVerBuild</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>PP_GetVerHotFix</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>PP_Reset</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIII
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlllI
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIII
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIlIII
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIIIll
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Reset
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIllI
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlIII
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[67]"></a>PP_Initialize</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = PP_Initialize &rArr; PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_math_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIlII
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIII
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIIIll
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllll
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Init
</UL>

<P><STRONG><a name="[6c]"></a>PP_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = PP_Init &rArr; PP_Initialize &rArr; PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Fs
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[81]"></a>lllIllllI</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[82]"></a>PP_addSamplesTI4404</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[83]"></a>PP_addSamplesAccG_TI4404</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[84]"></a>PP_addSamplesTI4405</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[85]"></a>PP_addSamplesAccG_TI4405</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[88]"></a>lIIIIlI</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_AddSamplesSI
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_ADI
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIlI
</UL>

<P><STRONG><a name="[86]"></a>lllIIllIlI</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlI
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesADI2
</UL>

<P><STRONG><a name="[89]"></a>PP_addSamplesADI2</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIlI
</UL>

<P><STRONG><a name="[8a]"></a>PP_addSamplesAccG_ADI</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlI
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[8b]"></a>PP_AddSamplesSI</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlI
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[8c]"></a>PP_IsMoving</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIIll
</UL>

<P><STRONG><a name="[8e]"></a>lIlIIIIIll</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_IsMoving
</UL>

<P><STRONG><a name="[245]"></a>lllIIIllII</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>llIIIIIIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>IIlIlllIlI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>lIIlIIlIlI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>IIlllIIIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>lIlIllIlIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>llIlIIlIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>PP_Set_CadenceWait</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_CadenceWait
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[91]"></a>PP_Set_HeartRateSmoothWindow</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_HeartRateSmoothWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[6d]"></a>PP_Set_Fs</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PP_Set_Fs &rArr; lllIlIIlI &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIIlI
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Init
</UL>

<P><STRONG><a name="[94]"></a>PP_Set_Gs</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_Gs
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlIII
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[96]"></a>PP_Set_AC_Cadence_Tracking</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_AC_Cadence_Tracking
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlllllII
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[98]"></a>PP_Set_Recovery</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_Recovery
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlllllII
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[9e]"></a>PP_Set_Peak_Initialisation</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pp_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[a3]"></a>PP_Set_Device_AFE</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pp_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[99]"></a>PP_Set_ActivityMode</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PP_Set_ActivityMode &rArr; lIIllIll &rArr; IIIlllIll &rArr; lllllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[24c]"></a>PP_Get_CadenceWait</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>PP_Get_HeartRateSmoothWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>PP_Get_Fs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>PP_Get_Gs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>PP_Get_Filter_Order_Walking</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[251]"></a>PP_Get_Filter_Order_Rowing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>PP_Get_Filter_Order_Cycling</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>PP_Get_Filter_Order_Weight</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>PP_Get_ActivityMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>PP_Get_AC_Cadence_Tracking</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>PP_Get_Recovery</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>PP_Get_Peak_Initialisation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>PP_Get_Device_AFE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesTI4404
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_ADI
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIlI
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_TI4405
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesTI4405
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_TI4404
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[9b]"></a>PP_Set_Defaults</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, pp_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PP_Set_Defaults &rArr; lIIIIlIll
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Peak_Initialisation
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Gs
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Device_AFE
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlIll
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIIIIl
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_HeartRateFillerWindow
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_CadenceFillerWindow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIlIIl
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIII
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_ActivityMode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Recovery
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_AC_Cadence_Tracking
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_HeartRateSmoothWindow
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_CadenceWait
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Fs
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[9c]"></a>PP_Set_HeartRateFillerWindow</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_HeartRateFillerWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[9d]"></a>PP_Set_CadenceFillerWindow</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_CadenceFillerWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[a4]"></a>PP_Set_SkinDetect</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PP_Set_SkinDetect
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlllllII
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIII
</UL>

<P><STRONG><a name="[a5]"></a>PP_Set_SkinDetectWavelength</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIII
</UL>

<P><STRONG><a name="[a6]"></a>PP_Set_SkinDetectBlankThreshold</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIII
</UL>

<P><STRONG><a name="[a7]"></a>PP_Set_SkinDetectThreshold</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIII
</UL>

<P><STRONG><a name="[a8]"></a>PP_Set_SkinDetectACThreshold</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIII
</UL>

<P><STRONG><a name="[258]"></a>PP_Set_IsDeviceOnUser</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>IIIlIIIII</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, pp_config_wear_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIIlIIIII &rArr; PP_Set_SkinDetect
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetect
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetectACThreshold
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetectThreshold
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetectBlankThreshold
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetectWavelength
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[259]"></a>PP_Is_HeartRateFilling</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>PP_Is_CadenceFilling</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>PP_Get_HeartRateFillerWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>PP_Get_CadenceFillerWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>PP_Get_SkinDetect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>PP_Get_SkinDetectWavelengthDC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>PP_Get_SkinDetectWavelengthAC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>PP_Get_SkinDetectBlankThreshold</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>PP_Get_SkinDetectThresholdLow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>PP_Get_SkinDetectThresholdHigh</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>PP_Get_SkinDetectACThresholdLow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>PP_Get_SkinDetectACThresholdHigh</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_wear_detection.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>lIIIIIIll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lq_phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>

<P><STRONG><a name="[60]"></a>LQ_Reset</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LQ_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllIIll
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlIII
</UL>

<P><STRONG><a name="[5f]"></a>IIIIlIlIII</STRONG> (Thumb, 30 bytes, Stack size 232 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = IIIIlIlIII &rArr; LQ_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Reset
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
</UL>

<P><STRONG><a name="[b1]"></a>LQ_Update_Metrics</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lq_phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIIlII
</UL>

<P><STRONG><a name="[7f]"></a>llllIIlII</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llllIIlII
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Update_Metrics
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIllIll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[b2]"></a>LQ_Validate</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LQ_Validate &rArr; IlIlIIIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIlIlII
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIIIllI
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Illlllllll
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIllII
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIllIIII
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlIII
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIlIIIl
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIIIll
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
</UL>

<P><STRONG><a name="[b4]"></a>lIlIlIIlII</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
</UL>

<P><STRONG><a name="[ba]"></a>IlIIllIlll</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
</UL>

<P><STRONG><a name="[bb]"></a>LQ_Calc_DefaultMaxVO2</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_div_q63
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIlll
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIIlII
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6b]"></a>LQ_Init</STRONG> (Thumb, 410 bytes, Stack size 80 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LQ_Init &rArr; llIllIlII &rArr; lq_div_q63 &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_div_q63
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlII
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>

<P><STRONG><a name="[c1]"></a>LQ_Calc_MaxVO2Test</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_CalculateVO2Max
</UL>

<P><STRONG><a name="[c3]"></a>PP_CalculateVO2Max</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
</UL>

<P><STRONG><a name="[c4]"></a>LQ_Is_StabilisedHR</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_GetHRConfidence
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_HeartRateStabilised
</UL>

<P><STRONG><a name="[c9]"></a>PP_HeartRateStabilised</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Is_StabilisedHR
</UL>

<P><STRONG><a name="[265]"></a>IllIlIIIlI</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>PP_GetLifeQ_HR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps_getHR
</UL>

<P><STRONG><a name="[266]"></a>PP_GetLifeQ_VO2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>PP_GetLifeQ_EPOC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>PP_GetLifeQ_Lactate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[269]"></a>PP_GetLifeQ_Calories</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>PP_GetLifeQ_Cadence</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>PP_GetLifeQ_MaxHR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>LQ_Get_HR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>LQ_Get_VO2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>LQ_Get_EPOC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>LQ_Get_Lactate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>LQ_Get_Calories</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[271]"></a>LQ_Get_Cadence</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>LQ_Get_MaxHR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>LQ_Set_Calories</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_SetLifeQ_Calories
</UL>

<P><STRONG><a name="[ca]"></a>IllIlllIIl</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[cf]"></a>IIlIIllIll</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIIlII
</UL>

<P><STRONG><a name="[d0]"></a>llllllIIll</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Reset
</UL>

<P><STRONG><a name="[d1]"></a>PP_SetLifeQ_Calories</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lq_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Set_Calories
</UL>

<P><STRONG><a name="[47]"></a>LQ_offset_f32</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LQ_offset_f32 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>LQ_abs_f32</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LQ_abs_f32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>LQ_mult_f32</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LQ_mult_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>LQ_mean_q31</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LQ_mean_q31 &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
</UL>

<P><STRONG><a name="[4a]"></a>LQ_mean_f32</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LQ_mean_f32 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>LQ_max_f32</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LQ_max_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>LQ_std_q31</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LQ_std_q31 &rArr; LQ_mean_q31 &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_mean_q31
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>LQ_dot_prod_f32</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LQ_dot_prod_f32 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>LQ_sum_f32</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LQ_sum_f32 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>lq_div_q63</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lq_div_q63 &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlII
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
</UL>

<P><STRONG><a name="[50]"></a>LQ_arm_sincos_f32</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lifeq_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LQ_arm_sincos_f32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>LQ_sincosf</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lifeq_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[273]"></a>lq_sqrt_approx_f32</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lifeq_math.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>lq_math_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lifeq_math.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>

<P><STRONG><a name="[a0]"></a>lIIIIIIIl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pp_config_model.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[274]"></a>IIllIllIlI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_model.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>lIlIIIIIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pp_config_model.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>lIIIIlIll</STRONG> (Thumb, 32 bytes, Stack size 88 bytes, pp_config_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lIIIIlIll
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[167]"></a>IlIIIllIl</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, pp_config_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IlIIIllIl
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
</UL>

<P><STRONG><a name="[276]"></a>llIIlllIlI</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pp_config_model.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>IIIlIlIIl</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pp_config_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIIlIlIIl
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlllllII
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
</UL>

<P><STRONG><a name="[277]"></a>IlIIlllllI</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pp_config_model.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>IIIlIIIIlI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_acc.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>IlIlIIIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_acc.o(.text), UNUSED)

<P><STRONG><a name="[27a]"></a>lIIllllIlI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_acc.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>llIIIIIIII</STRONG> (Thumb, 194 bytes, Stack size 248 bytes, dsp_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlllll
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIl
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIll
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
</UL>

<P><STRONG><a name="[72]"></a>lIlIlIlll</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, dsp_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lIlIlIlll &rArr; llIIIlIlII &rArr; IIIIIlIII &rArr; lllllIIll &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIll
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIlIIIll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[76]"></a>llIIlIIIll</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, dsp_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = llIIlIIIll &rArr; lIlIlIlll &rArr; llIIIlIlII &rArr; IIIIIlIII &rArr; lllllIIll &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[e6]"></a>lIlIlllIII</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, dsp_acc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIll
</UL>

<P><STRONG><a name="[e7]"></a>llIllIIlII</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, dsp_acc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIll
</UL>

<P><STRONG><a name="[62]"></a>lllllIIIl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIllIl
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[eb]"></a>lIIlllIl</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lIIlllIl
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllIII
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIII
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
</UL>

<P><STRONG><a name="[7c]"></a>lIIlIlIII</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lIIlIlIII &rArr; IIllIlIlII &rArr; IIIIlIlIl
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlllIl
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlIlII
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlI
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIll
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[9a]"></a>lIIllIll</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lIIllIll &rArr; IIIlllIll &rArr; lllllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_ActivityMode
</UL>

<P><STRONG><a name="[f5]"></a>lIllllll</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
</UL>

<P><STRONG><a name="[f3]"></a>lIlllIl</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lIlllIl &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip_f
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlIII
</UL>

<P><STRONG><a name="[f4]"></a>llllIlIIlI</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llllIlIIlI &rArr; lIIllIll &rArr; IIIlllIll &rArr; lllllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIll
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllll
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIIl
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIll
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIllIll
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
</UL>

<P><STRONG><a name="[f8]"></a>lIlllIllI</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lIlllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIIII
</UL>

<P><STRONG><a name="[f9]"></a>IlIllIlIII</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = IlIllIlIII &rArr; lIllllIl &rArr; IllIlIIII &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIll
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIl
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIIII
</UL>

<P><STRONG><a name="[77]"></a>IlIIlII</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hr_data_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIII
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllllI
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIllIl
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIII
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIllll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[127]"></a>IIlIlIlII</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = IIlIlIlII &rArr; IllIlIIlI &rArr; llIIIlIlIl &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIll
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIIIl
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIlll
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlII
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIlI
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlIl
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIlIl
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIlI
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllll
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIll
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIlII
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIllIl
</UL>

<P><STRONG><a name="[12c]"></a>llIllIIlll</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hr_data_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[12e]"></a>lIIlIllllI</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hr_data_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>

<P><STRONG><a name="[7b]"></a>lIIlIllI</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lIIlIllI &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllIII
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIII
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[12f]"></a>IllllIIII</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IllllIIII &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIllIIl
</UL>

<P><STRONG><a name="[130]"></a>IlIIIllll</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hr_data_handler.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIllII
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_GetHRConfidence
</UL>

<P><STRONG><a name="[131]"></a>IIIllIlII</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIlI
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIllIl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllllIII
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlIIlI
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIlIllI
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIIII
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIllIIl
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlllIll
</UL>

<P><STRONG><a name="[132]"></a>IIlIlllIll</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllII
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIllll
</UL>

<P><STRONG><a name="[27b]"></a>llIlIllIlI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hr_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[27c]"></a>IIlIIlllll</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hr_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[27d]"></a>lIIIIIIIIl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hr_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>lIlIlIIIlI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hr_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>IlIlIllIl</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hr_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = IlIlIllIl &rArr; IIlIlIlII &rArr; IllIlIIlI &rArr; llIIIlIlIl &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIIIl
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIllI
</UL>

<P><STRONG><a name="[69]"></a>lIllllIlII</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, hr_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lIllllIlII &rArr; IIlIlIlII &rArr; IllIlIIlI &rArr; llIIIlIlIl &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>

<P><STRONG><a name="[27f]"></a>llIlIIIIIl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hr_phys_calc.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>IIIIllll</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hr_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllIII
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlllIll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[7e]"></a>llIlIIIII</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hr_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llIlIIIII &rArr; lIIlIllI &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlllIl
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[7d]"></a>IIIIIllIIl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hr_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIIIIllIIl &rArr; IllllIIII &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIII
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[135]"></a>IllIlIllII</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hr_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIllll
</UL>

<P><STRONG><a name="[c5]"></a>PP_GetHRConfidence</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hr_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIllll
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIlIIII
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Is_StabilisedHR
</UL>

<P><STRONG><a name="[136]"></a>lllIIlIIII</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hr_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_GetHRConfidence
</UL>

<P><STRONG><a name="[137]"></a>PP_IsSensorContactDetectedWithFiller</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hr_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlllII
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIIII
</UL>

<P><STRONG><a name="[138]"></a>IlIIlIIIII</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hr_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_IsSensorContactDetectedWithFiller
</UL>

<P><STRONG><a name="[139]"></a>PP_IsSensorContactDetected</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hr_phys_calc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlIlII
</UL>

<P><STRONG><a name="[56]"></a>IllIlllll</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IllIlllll &rArr; lllIlIIlI &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIll
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIIlI
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIllI
</UL>

<P><STRONG><a name="[79]"></a>IIlIIIlIIl</STRONG> (Thumb, 452 bytes, Stack size 40 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = IIlIIIlIIl &rArr; IIlIIIlll &rArr; lIIIllIll &rArr; expf &rArr; __hardfp_expf
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllllll
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIIlll
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_int32
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[101]"></a>lIIIlIIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, initialisation.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
</UL>

<P><STRONG><a name="[bd]"></a>lIIlIllll</STRONG> (Thumb, 334 bytes, Stack size 80 bytes, lqscore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
</UL>

<P><STRONG><a name="[145]"></a>IIIlllllI</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, lqscore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IIIlllllI &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logf
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expf
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlII
</UL>

<P><STRONG><a name="[c0]"></a>llIllIlII</STRONG> (Thumb, 422 bytes, Stack size 56 bytes, lqscore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = llIllIlII &rArr; lq_div_q63 &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIll
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_div_q63
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
</UL>

<P><STRONG><a name="[280]"></a>IIIIllIlll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lqscore.o(.text), UNUSED)

<P><STRONG><a name="[281]"></a>IlIIIllllI</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lqscore.o(.text), UNUSED)

<P><STRONG><a name="[282]"></a>llIlIIIlIl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lqscore.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>IIIIIIlIII</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, lqscore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIllll
</UL>

<P><STRONG><a name="[148]"></a>IIIllIllll</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lqscore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIII
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
</UL>

<P><STRONG><a name="[14a]"></a>IllIIlllI</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, lqscore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expf
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIllll
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_div_q63
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>

<P><STRONG><a name="[14e]"></a>IlIIIIIIII</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, lqscore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIllI
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlI
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_div_q63
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>

<P><STRONG><a name="[5a]"></a>lIllIIIII</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lIllIIIII &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlllI
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIllI
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>

<P><STRONG><a name="[71]"></a>IlIIlIIlI</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = IlIIlIIlI &rArr; lIIIllIIll &rArr; lIIlIlllI &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIlIllI
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIlIll
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlllllI
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIllI
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[283]"></a>lIIlIlIlII</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, skin_detection.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>IlIIlIIIIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, skin_detection.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>llllIIlIll</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, skin_detection.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>llIllIIIl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, skin_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllIII
</UL>

<P><STRONG><a name="[13a]"></a>lIIIIlIlII</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, skin_detection.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIIIll
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_IsSensorContactDetected
</UL>

<P><STRONG><a name="[78]"></a>IIIIlllII</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, skin_detection.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIIIll
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_IsSensorContactDetectedWithFiller
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[aa]"></a>lIllIll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIIIllI
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Illlllllll
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIllII
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIllIIII
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlIII
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIlIIIl
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIIIll
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllllIlII
</UL>

<P><STRONG><a name="[6f]"></a>IIllllIlII</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, helper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIllllIlII
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[5b]"></a>lIllIlllI</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIII
</UL>

<P><STRONG><a name="[5c]"></a>IIIIlIllI</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIII
</UL>

<P><STRONG><a name="[5d]"></a>lIIlIIlIII</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
</UL>

<P><STRONG><a name="[74]"></a>IIIIIlllI</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, helper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = IIIIIlllI &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[75]"></a>lIIlIlllI</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, helper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lIIlIlllI &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[15a]"></a>llIllllll</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, helper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[73]"></a>IIlllIII</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, helper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = IIlllIII &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[93]"></a>lllIlIIlI</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, helper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lllIlIIlI &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Fs
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllll
</UL>

<P><STRONG><a name="[95]"></a>lIllIlIII</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Gs
</UL>

<P><STRONG><a name="[90]"></a>IIllIIlI</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_HeartRateFillerWindow
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_CadenceFillerWindow
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_HeartRateSmoothWindow
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_CadenceWait
</UL>

<P><STRONG><a name="[97]"></a>IlllllII</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, helper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIlIIl
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Recovery
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_AC_Cadence_Tracking
</UL>

<P><STRONG><a name="[286]"></a>AC_reset</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, activity_classification.o(.text), UNUSED)

<P><STRONG><a name="[287]"></a>AC_update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, activity_classification.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>AC_movement_detection</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, activity_classification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AC_movement_detection &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
</UL>

<P><STRONG><a name="[288]"></a>AC_get_activity</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_classification.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>IIIlIIllI</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IIIlIIllI &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[e3]"></a>lIIlIIll</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lIIlIIll &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>

<P><STRONG><a name="[15b]"></a>lIIlIIIII</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, dsp_filters.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[15c]"></a>lllIlIlI</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIIIl
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIlIIIl
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIlllll
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIIIlI
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllllI
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIlIlI
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIll
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIIll
</UL>

<P><STRONG><a name="[15e]"></a>lIIIllllI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
</UL>

<P><STRONG><a name="[15f]"></a>lllIlIIIlI</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dsp_filters.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[160]"></a>lIlIIlllll</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_filters.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>

<P><STRONG><a name="[dd]"></a>lllllIIll</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lllllIIll &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlIII
</UL>

<P><STRONG><a name="[fb]"></a>IIlIlIll</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IIlIlIll &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlIII
</UL>

<P><STRONG><a name="[161]"></a>llIlIlIIIl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_filters.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>

<P><STRONG><a name="[105]"></a>IIIlIIlIlI</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IIIlIIlIlI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIllIIl
</UL>

<P><STRONG><a name="[142]"></a>llllllllll</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dsp_filters.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = llllllllll &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[12b]"></a>llIIllIIIl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, envelope.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
</UL>

<P><STRONG><a name="[162]"></a>IIlllIlll</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, envelope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIlllIlll &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIl
</UL>

<P><STRONG><a name="[d8]"></a>lllIlllll</STRONG> (Thumb, 44 bytes, Stack size 272 bytes, envelope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIII
</UL>

<P><STRONG><a name="[de]"></a>lIIIllIIl</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, envelope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lIIIllIIl &rArr; IIlllIlll &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlll
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlIII
</UL>

<P><STRONG><a name="[d9]"></a>lIllIIl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, envelope.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIII
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIII
</UL>

<P><STRONG><a name="[e0]"></a>llIIllIl</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, envelope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = llIIllIl &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
</UL>

<P><STRONG><a name="[16b]"></a>lllIIllIl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kman_model.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIll
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlIl
</UL>

<P><STRONG><a name="[168]"></a>IIllIlIlI</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, kman_model.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>

<P><STRONG><a name="[11c]"></a>lllllllll</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lllllllll &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
</UL>

<P><STRONG><a name="[16a]"></a>llIIIlIIll</STRONG> (Thumb, 650 bytes, Stack size 128 bytes, kman_model.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[ff]"></a>llIIIlIlIl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = llIIIlIlIl &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIl
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIlII
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIlI
</UL>

<P><STRONG><a name="[11b]"></a>lIllIIIIl</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lIllIIIIl &rArr; IlIIIIIIlI &rArr; IllIIIlllI &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIlIll
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIlI
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
</UL>

<P><STRONG><a name="[108]"></a>IlIIIIIlI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kman_model.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIIl
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[11a]"></a>IllIIlIII</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IllIIlIII &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIl
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIIIl
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
</UL>

<P><STRONG><a name="[fd]"></a>lllIIllI</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, notch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lllIIllI &rArr; asinf &rArr; __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIlI
</UL>

<P><STRONG><a name="[118]"></a>lllIIllIll</STRONG> (Thumb, 486 bytes, Stack size 88 bytes, notch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = lllIIllIll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlIIlI
</UL>

<P><STRONG><a name="[16e]"></a>lIlIIllIlI</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, notch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>

<P><STRONG><a name="[16f]"></a>IIIlllllIl</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, notch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acosf
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[fe]"></a>IIllIlII</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, notch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIllIlII &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIlI
</UL>

<P><STRONG><a name="[10f]"></a>lIllIlll</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, notch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lIllIlll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIlI
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[f7]"></a>llIIIIIll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, qr_rls_filter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llIIIIIll &rArr; lllllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIllI
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
</UL>

<P><STRONG><a name="[f2]"></a>IIIlllIll</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, qr_rls_filter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIIlllIll &rArr; lllllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIllI
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIllIll
</UL>

<P><STRONG><a name="[f1]"></a>IllIlIIII</STRONG> (Thumb, 582 bytes, Stack size 112 bytes, qr_rls_filter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = IllIlIIII &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIl
</UL>

<P><STRONG><a name="[129]"></a>llIlIIIIll</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cadence_peak_tracker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llIlIIIIll
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIl
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
</UL>

<P><STRONG><a name="[121]"></a>llIlIIIIII</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, cadence_peak_tracker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlll
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllllI
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllllIII
</UL>

<P><STRONG><a name="[10e]"></a>llIllllIl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cadence_peak_tracker.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[10d]"></a>IlIlIlllI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cadence_peak_tracker.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[128]"></a>llIIIIlll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, autocorr_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
</UL>

<P><STRONG><a name="[120]"></a>lIIIlIlII</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, autocorr_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllllIII
</UL>

<P><STRONG><a name="[10b]"></a>IlIlIIIl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, autocorr_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlIII
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[113]"></a>IllIIllIl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, autocorr_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIIl
</UL>

<P><STRONG><a name="[10c]"></a>lIIlIlIl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, autocorr_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlIII
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIIl
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[114]"></a>lIlIIIlll</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, autocorr_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIIl
</UL>

<P><STRONG><a name="[174]"></a>IIIIIIIlII</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[d7]"></a>IIlIIll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlII
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIII
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllll
</UL>

<P><STRONG><a name="[175]"></a>IlIlllIlll</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[dc]"></a>IIlIlI</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllII
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIllIIl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIllI
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlIII
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
</UL>

<P><STRONG><a name="[176]"></a>llIIIlIIIl</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[289]"></a>IlIlIlIIlI</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>IlIllIIIl</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
</UL>

<P><STRONG><a name="[28a]"></a>IIIlllIIII</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>IlllllllIl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[28b]"></a>IlIllllIlI</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>lIlllllIll</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[28c]"></a>lIlllIllll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>IIlllllIIl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[28d]"></a>llllllIIII</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>IIIlIIIlIl</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[17c]"></a>IlIIllllI</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, dsp_interpolation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>

<P><STRONG><a name="[17d]"></a>IIIIlIlll</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, dsp_interpolation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>

<P><STRONG><a name="[17e]"></a>llIllIllI</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, dsp_interpolation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[17f]"></a>llllIlIll</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, dsp_interpolation.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[173]"></a>IlIIlIIII</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, dsp_interpolation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IlIIlIIII &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
</UL>

<P><STRONG><a name="[28e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIlIl
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllllIll
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIIIl
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIlI
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlIl
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Is_StabilisedHR
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIII
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_ADI
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIlI
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[28f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIIIl
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlII
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
</UL>

<P><STRONG><a name="[d4]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDCSignalSummary
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateACSignalSummary
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_mean_q31
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lq_div_q63
</UL>

<P><STRONG><a name="[14c]"></a>__aeabi_lmul</STRONG> (Thumb, 120 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
</UL>

<P><STRONG><a name="[290]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllllIII
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlllll
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlIll
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIII
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlIII
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Initialize
</UL>

<P><STRONG><a name="[291]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[292]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[178]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlllllllIl
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllllIIl
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlllIlll
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIllI
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlllll
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIlII
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIII
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllll
</UL>

<P><STRONG><a name="[294]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1fe]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIIll
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIlI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIlllI
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIIII
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIlll
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIllI
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIII
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllllll
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_int32
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlIII
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_movement_detection
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlIll
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIll
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlIII
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_sum_f32
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_mean_f32
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_offset_f32
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIIlII
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIIlII
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIIll
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIlI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIlllI
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlll
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIIII
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIII
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllllll
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_int32
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIll
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIl
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIll
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIIlII
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[ef]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIllI
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlIll
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIIlI
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllIlI
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIIll
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlIlI
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIlI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIlllI
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIlII
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlI
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIIII
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIllI
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIllll
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIII
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllllll
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlIII
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIllll
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIII
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllllI
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIlI
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlIll
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIIII
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIll
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIll
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_dot_prod_f32
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_mult_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIlll
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIIlII
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIlIIIll
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIIll
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIlllI
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIlII
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIIIlI
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIlll
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIllll
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIII
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllllll
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlII
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIIlll
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_mean_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIlll
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIIlII
</UL>

<P><STRONG><a name="[e4]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllIlI
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlIlI
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIlllI
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIIIII
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIlI
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIl
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIlIIIll
</UL>

<P><STRONG><a name="[295]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllllll
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_dot_prod_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Is_StabilisedHR
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlllI
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlllI
</UL>

<P><STRONG><a name="[ed]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllllll
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlllI
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlllI
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlll
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllllI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlIl
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIlll
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIllll
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_movement_detection
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIIlll
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIlIIIll
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlll
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIlIll
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlllllI
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIllI
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllllllll
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlIII
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_mean_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIlll
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIlII
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Fs
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllll
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIllIl
</UL>

<P><STRONG><a name="[14d]"></a>__aeabi_l2f</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ffltl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIlIl
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllllIll
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllllll
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlllI
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlllI
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlIl
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Is_StabilisedHR
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllIlI
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_int32
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIII
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllllI
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllllIII
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlIl
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_DefaultMaxVO2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIllll
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Calc_MaxVO2Test
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIIlII
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Init
</UL>

<P><STRONG><a name="[149]"></a>__aeabi_f2lz</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ffixl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIII
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIllll
</UL>

<P><STRONG><a name="[159]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllllll
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlllI
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlllI
</UL>

<P><STRONG><a name="[c8]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Is_StabilisedHR
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlll
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIlI
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_dot_prod_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[180]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
</UL>

<P><STRONG><a name="[296]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIll
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIllI
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIlIlI
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlIl
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIlI
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIIll
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIllI
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_dot_prod_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllll
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllIIl
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>

<P><STRONG><a name="[fa]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIlIll
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlllllI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hq_min_f
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlIII
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip_f
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIII
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIlIll
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlllllI
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIllI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_movement_detection
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hq_max_f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip_f
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIl
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_max_f32
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_IsMoving
</UL>

<P><STRONG><a name="[181]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[182]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>

<P><STRONG><a name="[297]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[298]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[299]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[185]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[189]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[188]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[54]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[29b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>ADS_Command</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ads1x9x_hal_driver.o(i.ADS_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ADS_Command &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_us
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_init
</UL>

<P><STRONG><a name="[190]"></a>ADS_Config</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, ads1x9x_hal_driver.o(i.ADS_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ADS_Config &rArr; ADS_Setting &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Setting
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_init
</UL>

<P><STRONG><a name="[195]"></a>ADS_Config_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ads1x9x_hal_driver.o(i.ADS_Config_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADS_Config_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_init
</UL>

<P><STRONG><a name="[192]"></a>ADS_ReadData</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ads1x9x_hal_driver.o(i.ADS_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ADS_ReadData &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_us
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[191]"></a>ADS_Setting</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, ads1x9x_hal_driver.o(i.ADS_Setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ADS_Setting &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_us
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Config
</UL>

<P><STRONG><a name="[194]"></a>ADS_init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ads1x9x_hal_driver.o(i.ADS_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ADS_init &rArr; ADS_Config &rArr; ADS_Setting &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Config_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_init
</UL>

<P><STRONG><a name="[1a3]"></a>AFE4404_addWriteCommandToQueue</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, afe4404_hw.o(i.AFE4404_addWriteCommandToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AFE4404_addWriteCommandToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setRf
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setLedCurrent
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setCf
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setAmbientCurrent
</UL>

<P><STRONG><a name="[196]"></a>AFE4404_enableRead</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, afe4404_hw.o(i.AFE4404_enableRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = AFE4404_enableRead &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_writeReg
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[198]"></a>AFE4404_enableWrite</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, afe4404_hw.o(i.AFE4404_enableWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = AFE4404_enableWrite &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_writeReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_writeRegWithWriteEnable
</UL>

<P><STRONG><a name="[199]"></a>AFE4404_getAFESettingsUint</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, afe4404_hw.o(i.AFE4404_getAFESettingsUint))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AFE4404_getAFESettingsUint
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getLedCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_retrieveSamplesAndPushToQueue
</UL>

<P><STRONG><a name="[1c1]"></a>AFE4404_getAmbientCurrent</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, afe4404_hw.o(i.AFE4404_getAmbientCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AFE4404_getAmbientCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
</UL>

<P><STRONG><a name="[1bc]"></a>AFE4404_getCf</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, afe4404_hw.o(i.AFE4404_getCf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AFE4404_getCf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[19a]"></a>AFE4404_getLedCurrent</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, afe4404_hw.o(i.AFE4404_getLedCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getAFESettingsUint
</UL>

<P><STRONG><a name="[1c2]"></a>AFE4404_getRf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, afe4404_hw.o(i.AFE4404_getRf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AFE4404_getRf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
</UL>

<P><STRONG><a name="[19b]"></a>AFE4404_readRegWithoutReadEnable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, afe4404_hw.o(i.AFE4404_readRegWithoutReadEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = AFE4404_readRegWithoutReadEnable &rArr; PPS960_readReg &rArr; Read_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_readReg
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_retrieveRawAFEValues
</UL>

<P><STRONG><a name="[19d]"></a>AFE4404_retrieveRawAFEValues</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, afe4404_hw.o(i.AFE4404_retrieveRawAFEValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = AFE4404_retrieveRawAFEValues &rArr; AFE4404_readRegWithoutReadEnable &rArr; PPS960_readReg &rArr; Read_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afeConvP32
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afeConvP16
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_readRegWithoutReadEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_retrieveSamplesAndPushToQueue
</UL>

<P><STRONG><a name="[1a0]"></a>AFE4404_serviceAFEWriteQueue</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, afe4404_hw.o(i.AFE4404_serviceAFEWriteQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = AFE4404_serviceAFEWriteQueue &rArr; AFE4404_writeRegWithWriteEnable &rArr; LIFEQTWI_writeReg &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_writeRegWithWriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_retrieveSamplesAndPushToQueue
</UL>

<P><STRONG><a name="[1a2]"></a>AFE4404_setAmbientCurrent</STRONG> (Thumb, 126 bytes, Stack size 36 bytes, afe4404_hw.o(i.AFE4404_setAmbientCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = AFE4404_setAmbientCurrent &rArr; AFE4404_addWriteCommandToQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_addWriteCommandToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAFE
</UL>

<P><STRONG><a name="[1a4]"></a>AFE4404_setCf</STRONG> (Thumb, 162 bytes, Stack size 4 bytes, afe4404_hw.o(i.AFE4404_setCf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AFE4404_setCf &rArr; AFE4404_addWriteCommandToQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_addWriteCommandToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_InitializeAGC
</UL>

<P><STRONG><a name="[1a5]"></a>AFE4404_setLedCurrent</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, afe4404_hw.o(i.AFE4404_setLedCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AFE4404_setLedCurrent &rArr; AFE4404_addWriteCommandToQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_addWriteCommandToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAFE
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_InitializeAGC
</UL>

<P><STRONG><a name="[1a6]"></a>AFE4404_setRf</STRONG> (Thumb, 168 bytes, Stack size 4 bytes, afe4404_hw.o(i.AFE4404_setRf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AFE4404_setRf &rArr; AFE4404_addWriteCommandToQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_addWriteCommandToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAFE
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_InitializeAGC
</UL>

<P><STRONG><a name="[1ba]"></a>AFE4404_settingsUintGetIsub</STRONG> (Thumb, 94 bytes, Stack size 28 bytes, afe4404_hw.o(i.AFE4404_settingsUintGetIsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AFE4404_settingsUintGetIsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[1bd]"></a>AFE4404_settingsUintGetLedCurrent</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, afe4404_hw.o(i.AFE4404_settingsUintGetLedCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[1bb]"></a>AFE4404_settingsUintGetRf</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, afe4404_hw.o(i.AFE4404_settingsUintGetRf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AFE4404_settingsUintGetRf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[1a1]"></a>AFE4404_writeRegWithWriteEnable</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, afe4404_hw.o(i.AFE4404_writeRegWithWriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = AFE4404_writeRegWithWriteEnable &rArr; LIFEQTWI_writeReg &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIFEQTWI_writeReg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_enableWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_serviceAFEWriteQueue
</UL>

<P><STRONG><a name="[1a8]"></a>AGC_InitializeAGC</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, agc_v3_1_19.o(i.AGC_InitializeAGC))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AGC_InitializeAGC &rArr; AFE4404_setRf &rArr; AFE4404_addWriteCommandToQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setRf
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setLedCurrent
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setCf
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>

<P><STRONG><a name="[1a9]"></a>AGC_ServiceAGC</STRONG> (Thumb, 378 bytes, Stack size 56 bytes, agc_v3_1_19.o(i.AGC_ServiceAGC))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = AGC_ServiceAGC &rArr; InitializeFilter &rArr; UpdateACSignalSummary &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSignalState
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMinMax
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDCSignalSummary
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateACSignalSummary
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SignalSaturated
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SignalInBounds
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReEvaluateAC
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeFilter
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSaturationAdjustment
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOffAdjustement
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckLEDCurAdjustement
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCalibrationAdjustment
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAmpAdjustment
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlignAGCWithAFE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAFE
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[1b9]"></a>ALGSH_dataToAlg</STRONG> (Thumb, 496 bytes, Stack size 136 bytes, afe4404_hw.o(i.ALGSH_dataToAlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesTI4404
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS_skin_detect
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_settingsUintGetRf
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_settingsUintGetLedCurrent
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_settingsUintGetIsub
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getCf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task
</UL>

<P><STRONG><a name="[1bf]"></a>ALGSH_retrieveSamplesAndPushToQueue</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, afe4404_hw.o(i.ALGSH_retrieveSamplesAndPushToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ALGSH_retrieveSamplesAndPushToQueue &rArr; AFE4404_serviceAFEWriteQueue &rArr; AFE4404_writeRegWithWriteEnable &rArr; LIFEQTWI_writeReg &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_serviceAFEWriteQueue
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_retrieveRawAFEValues
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getAFESettingsUint
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task
</UL>

<P><STRONG><a name="[1ad]"></a>AdjustAFE</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, agc_v3_1_19.o(i.AdjustAFE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AdjustAFE &rArr; AFE4404_setAmbientCurrent &rArr; AFE4404_addWriteCommandToQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAGCStruct
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setRf
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setLedCurrent
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_setAmbientCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1ae]"></a>AlignAGCWithAFE</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, agc_v3_1_19.o(i.AlignAGCWithAFE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AlignAGCWithAFE &rArr; AFE4404_getAmbientCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_settingsUintGetRf
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_settingsUintGetLedCurrent
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_settingsUintGetIsub
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getRf
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getLedCurrent
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_getAmbientCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1c3]"></a>ChannelTooHigh</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, agc_v3_1_19.o(i.ChannelTooHigh))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCalibrationAdjustment
</UL>

<P><STRONG><a name="[1c4]"></a>ChannelTooLow</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, agc_v3_1_19.o(i.ChannelTooLow))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCalibrationAdjustment
</UL>

<P><STRONG><a name="[1b6]"></a>CheckAmpAdjustment</STRONG> (Thumb, 568 bytes, Stack size 48 bytes, agc_v3_1_19.o(i.CheckAmpAdjustment))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CheckAmpAdjustment
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1ac]"></a>CheckCalibrationAdjustment</STRONG> (Thumb, 720 bytes, Stack size 68 bytes, agc_v3_1_19.o(i.CheckCalibrationAdjustment))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CheckCalibrationAdjustment &rArr; CheckSaturationAdjustment &rArr; CheckChannelSaturationAdjustment
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SignalSaturated
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSaturationAdjustment
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOffAdjustement
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTooLow
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelTooHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1c5]"></a>CheckChannelSaturationAdjustment</STRONG> (Thumb, 314 bytes, Stack size 44 bytes, agc_v3_1_19.o(i.CheckChannelSaturationAdjustment))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CheckChannelSaturationAdjustment
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSaturationAdjustment
</UL>

<P><STRONG><a name="[1b7]"></a>CheckLEDCurAdjustement</STRONG> (Thumb, 346 bytes, Stack size 28 bytes, agc_v3_1_19.o(i.CheckLEDCurAdjustement))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CheckLEDCurAdjustement
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1b8]"></a>CheckOffAdjustement</STRONG> (Thumb, 380 bytes, Stack size 44 bytes, agc_v3_1_19.o(i.CheckOffAdjustement))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CheckOffAdjustement
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCalibrationAdjustment
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1b0]"></a>CheckSaturationAdjustment</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, agc_v3_1_19.o(i.CheckSaturationAdjustment))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CheckSaturationAdjustment &rArr; CheckChannelSaturationAdjustment
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChannelSaturationAdjustment
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCalibrationAdjustment
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[234]"></a>ClrHRSampleCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, afe4404_hw.o(i.ClrHRSampleCount))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task2
</UL>

<P><STRONG><a name="[231]"></a>DWT_Delay_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, dwt_stm32_delay.o(i.DWT_Delay_Init))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; ADS_ReadData &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1c9]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>

<P><STRONG><a name="[1f5]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1ca]"></a>HAL_Delay</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_disable
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pps960_sensor
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cc]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 474 bytes, Stack size 48 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; ADS_ReadData &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_ReadData
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[1c8]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; ADS_ReadData &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[1d9]"></a>HAL_GPIO_Init</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
</UL>

<P><STRONG><a name="[20c]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inbyt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
</UL>

<P><STRONG><a name="[18d]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Setting
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Command
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_disable
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pps960_sensor
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_disable
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_ReadData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outbyt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inbyt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Clock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[218]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1cd]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cf]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1d0]"></a>HAL_MspInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1e2]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[1d2]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1ce]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1d4]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1c6]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_us
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_us
</UL>

<P><STRONG><a name="[21c]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[21b]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[1d5]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[1d6]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 770 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_SPI_Init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[193]"></a>HAL_SPI_Receive</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_ReadData
</UL>

<P><STRONG><a name="[18f]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CheckFlag_BSY
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Setting
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Command
</UL>

<P><STRONG><a name="[1da]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CheckFlag_BSY
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[21a]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1de]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[1d1]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1dd]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1ed]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1ef]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[210]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[1df]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[1e0]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[238]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
</UL>

<P><STRONG><a name="[239]"></a>HAL_TIM_Base_Stop_IT</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Stop_IT))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
</UL>

<P><STRONG><a name="[1e3]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[1e9]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1e8]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; pps960_sensor_task &rArr; ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[1ea]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1eb]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1ec]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; pps960_sensor_task &rArr; ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task2
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1ee]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1f6]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[1f2]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[1f9]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[1fa]"></a>HAL_UART_MspInit</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[1fd]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[1fc]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, main.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[200]"></a>HAL_UART_Transmit</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f8]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[202]"></a>I2C_Ack</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, iic.o(i.I2C_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I2C_Ack &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[206]"></a>I2C_Clock</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, iic.o(i.I2C_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_Clock &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outbyt
</UL>

<P><STRONG><a name="[207]"></a>I2C_GPIO_Config</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, iic.o(i.I2C_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2C_GPIO_Config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[208]"></a>I2C_NoAck</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, iic.o(i.I2C_NoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I2C_NoAck &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[209]"></a>I2C_Start</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, iic.o(i.I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = I2C_Start &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Configuration
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[20a]"></a>I2C_Stop</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, iic.o(i.I2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Configuration
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[20b]"></a>I2C_WaitAck</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, iic.o(i.I2C_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Configuration
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[1b1]"></a>InitializeFilter</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, agc_v3_1_19.o(i.InitializeFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InitializeFilter &rArr; UpdateACSignalSummary &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDCSignalSummary
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateACSignalSummary
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1a7]"></a>LIFEQTWI_writeReg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, afe4404_hw.o(i.LIFEQTWI_writeReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LIFEQTWI_writeReg &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_writeReg
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_writeRegWithWriteEnable
</UL>

<P><STRONG><a name="[20d]"></a>MX_GPIO_Init</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20e]"></a>MX_SPI1_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, spi.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20f]"></a>MX_TIM2_Init</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, tim.o(i.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[211]"></a>MX_TIM3_Init</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, tim.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[212]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[213]"></a>PPS960_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, afe4404_hw.o(i.PPS960_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = PPS960_init &rArr; PP_Init &rArr; PP_Initialize &rArr; PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_SkinDetect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Peak_Initialisation
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Gs
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Device_AFE
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Set_Defaults
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_InitializeAGC
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_enableRead
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pps960_sensor
</UL>

<P><STRONG><a name="[19c]"></a>PPS960_readReg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pps960.o(i.PPS960_readReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PPS960_readReg &rArr; Read_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_readRegWithoutReadEnable
</UL>

<P><STRONG><a name="[197]"></a>PPS960_writeReg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pps960.o(i.PPS960_writeReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_PPS960_register
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIFEQTWI_writeReg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_enableWrite
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_enableRead
</UL>

<P><STRONG><a name="[236]"></a>PPS_get_skin_detect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, afe4404_hw.o(i.PPS_get_skin_detect))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task2
</UL>

<P><STRONG><a name="[1be]"></a>PPS_skin_detect</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, afe4404_hw.o(i.PPS_skin_detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PPS_skin_detect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1b5]"></a>ReEvaluateAC</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, agc_v3_1_19.o(i.ReEvaluateAC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReEvaluateAC
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[214]"></a>Read_Configuration</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, iic.o(i.Read_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Read_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outbyt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inbyt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_readReg
</UL>

<P><STRONG><a name="[1c0]"></a>ResetAGCStruct</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, agc_v3_1_19.o(i.ResetAGCStruct))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustAFE
</UL>

<P><STRONG><a name="[205]"></a>SDA_IN</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, iic.o(i.SDA_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SDA_IN &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outbyt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inbyt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[204]"></a>SDA_OUT</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, iic.o(i.SDA_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outbyt
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1b4]"></a>SignalInBounds</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, agc_v3_1_19.o(i.SignalInBounds))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1af]"></a>SignalSaturated</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, agc_v3_1_19.o(i.SignalSaturated))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCalibrationAdjustment
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[219]"></a>SystemClock_Config</STRONG> (Thumb, 150 bytes, Stack size 88 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>TIM2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; pps960_sensor_task &rArr; ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; pps960_sensor_task &rArr; ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1e1]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[1b3]"></a>UpdateACSignalSummary</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, agc_v3_1_19.o(i.UpdateACSignalSummary))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UpdateACSignalSummary &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeFilter
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1ab]"></a>UpdateDCSignalSummary</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, agc_v3_1_19.o(i.UpdateDCSignalSummary))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UpdateDCSignalSummary &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeFilter
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1b2]"></a>UpdateMinMax</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, agc_v3_1_19.o(i.UpdateMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UpdateMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[1aa]"></a>UpdateSignalState</STRONG> (Thumb, 132 bytes, Stack size 44 bytes, agc_v3_1_19.o(i.UpdateSignalState))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UpdateSignalState
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AGC_ServiceAGC
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xc.o(RESET)
</UL>
<P><STRONG><a name="[215]"></a>Write_Configuration</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, iic.o(i.Write_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outbyt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_writeReg
</UL>

<P><STRONG><a name="[21d]"></a>__0printf$bare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[29e]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[1ff]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[14b]"></a>__ARM_common_ll_mulss</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lqscore.o(i.__ARM_common_ll_mulss), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
</UL>

<P><STRONG><a name="[7a]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, phys_calc.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlll
</UL>

<P><STRONG><a name="[224]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[21f]"></a>__hardfp_acosf</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, acosf.o(i.__hardfp_acosf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acosf
</UL>

<P><STRONG><a name="[223]"></a>__hardfp_asinf</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, asinf.o(i.__hardfp_asinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[226]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[228]"></a>__hardfp_expf</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, expf.o(i.__hardfp_expf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_expf
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expf
</UL>

<P><STRONG><a name="[29f]"></a>__mathlib_expf</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, expf.o(i.__hardfp_expf), UNUSED)

<P><STRONG><a name="[22a]"></a>__hardfp_logf</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, logf.o(i.__hardfp_logf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_logf
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logf
</UL>

<P><STRONG><a name="[2a0]"></a>__mathlib_logf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, logf.o(i.__hardfp_logf), UNUSED)

<P><STRONG><a name="[22c]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
</UL>

<P><STRONG><a name="[22b]"></a>__mathlib_flt_divzero</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_divzero))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>

<P><STRONG><a name="[220]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
</UL>

<P><STRONG><a name="[222]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
</UL>

<P><STRONG><a name="[229]"></a>__mathlib_flt_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>

<P><STRONG><a name="[225]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[227]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[2a1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2a2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2a3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[221]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
</UL>

<P><STRONG><a name="[170]"></a>acosf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, acosf.o(i.acosf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllIl
</UL>

<P><STRONG><a name="[22d]"></a>ads1291_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ads1x9x_hal_driver.o(i.ads1291_disable))
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
</UL>

<P><STRONG><a name="[22e]"></a>ads1291_init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ads1x9x_hal_driver.o(i.ads1291_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ads1291_init &rArr; ADS_init &rArr; ADS_Config &rArr; ADS_Setting &rArr; HAL_SPI_Transmit &rArr; SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Command
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
</UL>

<P><STRONG><a name="[19f]"></a>afeConvP16</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, afe4404_hw.o(i.afeConvP16))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_retrieveRawAFEValues
</UL>

<P><STRONG><a name="[19e]"></a>afeConvP32</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, afe4404_hw.o(i.afeConvP32))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFE4404_retrieveRawAFEValues
</UL>

<P><STRONG><a name="[16d]"></a>asinf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, asinf.o(i.asinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = asinf &rArr; __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
</UL>

<P><STRONG><a name="[4e]"></a>cosf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cosf.o(i.cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = cosf &rArr; __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_sincosf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[203]"></a>delay_us</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, iic.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inbyt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Clock
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[13d]"></a>expf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, expf.o(i.expf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = expf &rArr; __hardfp_expf
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlllI
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIII
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
</UL>

<P><STRONG><a name="[52]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[217]"></a>inbyt</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, iic.o(i.inbyt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = inbyt &rArr; SDA_IN &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[22f]"></a>init_PPS960_register</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, afe4404_hw.o(i.init_PPS960_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = init_PPS960_register &rArr; PPS960_writeReg &rArr; Write_Configuration &rArr; I2C_WaitAck &rArr; I2C_Stop &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_writeReg
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pps960_sensor
</UL>

<P><STRONG><a name="[230]"></a>init_pps960_sensor</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, pps960.o(i.init_pps960_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = init_pps960_sensor &rArr; PPS960_init &rArr; PP_Init &rArr; PP_Initialize &rArr; PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_us
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_PPS960_register
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS960_init
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
</UL>

<P><STRONG><a name="[146]"></a>logf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, logf.o(i.logf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = logf &rArr; __hardfp_logf
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllllI
</UL>

<P><STRONG><a name="[42]"></a>main</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = main &rArr; sensor_switch &rArr; init_pps960_sensor &rArr; PPS960_init &rArr; PP_Init &rArr; PP_Initialize &rArr; PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWT_Delay_Init
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[216]"></a>outbyt</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, iic.o(i.outbyt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = outbyt &rArr; SDA_OUT &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OUT
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_IN
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Clock
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Configuration
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Configuration
</UL>

<P><STRONG><a name="[233]"></a>pps960_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pps960.o(i.pps960_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pps960_disable &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_switch
</UL>

<P><STRONG><a name="[1f1]"></a>pps960_sensor_task</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pps960.o(i.pps960_sensor_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = pps960_sensor_task &rArr; ALGSH_dataToAlg &rArr; PP_addSamplesTI4404 &rArr; IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_retrieveSamplesAndPushToQueue
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ALGSH_dataToAlg
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[1f0]"></a>pps960_sensor_task2</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, pps960.o(i.pps960_sensor_task2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pps960_sensor_task2
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps_getHR
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPS_get_skin_detect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHRSampleCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[235]"></a>pps_getHR</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, afe4404_hw.o(i.pps_getHR))
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_GetLifeQ_HR
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_sensor_task2
</UL>

<P><STRONG><a name="[232]"></a>sensor_switch</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(i.sensor_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = sensor_switch &rArr; init_pps960_sensor &rArr; PPS960_init &rArr; PP_Init &rArr; PP_Initialize &rArr; PP_Reset &rArr; llIIIIIIII &rArr; lllIlllll
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pps960_disable
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pps960_sensor
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ads1291_disable
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>sinf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sinf.o(i.sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sinf &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_sincosf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>sqrtf</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_std_q31
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lifeq_math.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[18e]"></a>DWT_Delay_us</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ads1x9x_hal_driver.o(i.DWT_Delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DWT_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Setting
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Command
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_ReadData
</UL>

<P><STRONG><a name="[1c7]"></a>DWT_Delay_us</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, pps960.o(i.DWT_Delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DWT_Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pps960_sensor
</UL>

<P><STRONG><a name="[1d3]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[51]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[1f4]"></a>UART_EndRxTransfer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1f3]"></a>UART_Receive_IT</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1fb]"></a>UART_SetConfig</STRONG> (Thumb, 676 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[1f7]"></a>UART_Transmit_IT</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[201]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[1e4]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1e7]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1e5]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1e6]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1dc]"></a>SPI_CheckFlag_BSY</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(i.SPI_CheckFlag_BSY))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_CheckFlag_BSY &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[1db]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CheckFlag_BSY
</UL>

<P><STRONG><a name="[55]"></a>llIIllIllI</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = llIIllIllI &rArr; IlIlIllIl &rArr; IIlIlIlII &rArr; IllIlIIlI &rArr; llIIIlIlIl &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlllll
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIllIl
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[63]"></a>IlIllIIlII</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[64]"></a>IIlIIIIIII</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[65]"></a>lIlllllIIl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[66]"></a>llIIIIIIlI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlI
</UL>

<P><STRONG><a name="[61]"></a>IIlIlIlI</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + In Cycle
<LI>Call Chain = IIlIlIlI &rArr;  PP_Reset (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIIIl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIIlI
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllllIIl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIIIII
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIIlII
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIllI
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Reset
</UL>

<P><STRONG><a name="[6e]"></a>IlIIlll</STRONG> (Thumb, 452 bytes, Stack size 32 bytes, phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = IlIIlll &rArr; IIIIllll &rArr; IIlIlllIll &rArr; IIIllIlII &rArr; IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIIlII
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIII
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIlIIIll
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlllI
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_Get_Device_AFE
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIlI
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllllIlII
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlllIII
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIllll
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlllII
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlllI
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIllIIl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesTI4404
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_AddSamplesSI
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_ADI
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIlI
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_TI4405
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesTI4405
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PP_addSamplesAccG_TI4404
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIllllI
</UL>

<P><STRONG><a name="[a9]"></a>IIlllIIIll</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIlllIIIll
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[ab]"></a>IIlIIlIIIl</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIlIIlIIIl
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[ac]"></a>llIllIlIII</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llIllIlIII
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[ad]"></a>IllIllIIII</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IllIllIIII
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[ae]"></a>IIIIlIllII</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIIIlIllII
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[af]"></a>Illlllllll</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Illlllllll
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[b0]"></a>IlIlIIIllI</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lq_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IlIlIIIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[b3]"></a>IlIlIlIlII</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lq_phys_calc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LQ_Validate
</UL>

<P><STRONG><a name="[db]"></a>IIIIIlIII</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, dsp_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = IIIIIlIII &rArr; lllllIIll &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllIIll
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIl
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlI
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
</UL>

<P><STRONG><a name="[df]"></a>llIIIlIlII</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, dsp_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = llIIIlIlII &rArr; IIIIIlIII &rArr; lllllIIll &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr_f
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlIII
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>

<P><STRONG><a name="[e5]"></a>IlIllIll</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, dsp_acc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIIlII
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlllIII
</UL>

<P><STRONG><a name="[e1]"></a>sqr_f</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dsp_acc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sqr_f &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlII
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlll
</UL>

<P><STRONG><a name="[e8]"></a>IIIIlIlIl</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIIIlIlIl
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlIlII
</UL>

<P><STRONG><a name="[ea]"></a>IlllllIII</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, fp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlIlII
</UL>

<P><STRONG><a name="[e9]"></a>IIllIlIlII</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIllIlIlII &rArr; IIIIlIlIl
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlllllIII
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlIlIl
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIII
</UL>

<P><STRONG><a name="[f6]"></a>IIlIIIIl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIlIIlI
</UL>

<P><STRONG><a name="[ec]"></a>IIIIIIlIl</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = IIIIIIlIl &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clip_f
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIl
</UL>

<P><STRONG><a name="[f0]"></a>lIllllIl</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lIllllIl &rArr; IllIlIIII &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlIII
</UL>

<P><STRONG><a name="[ee]"></a>clip_f</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, adaptive_filter_preprocessing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clip_f
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIl
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIIlIl
</UL>

<P><STRONG><a name="[fc]"></a>IllIlIIlI</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = IllIlIIlI &rArr; llIIIlIlIl &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlIl
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
</UL>

<P><STRONG><a name="[12a]"></a>lIIlIIlIl</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lIIlIIlIl
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
</UL>

<P><STRONG><a name="[100]"></a>IIIIIIllI</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = IIIIIIllI &rArr; lllIIllI &rArr; asinf &rArr; __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIlIIIl
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_movement_detection
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[104]"></a>IllIllIIl</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = IllIllIIl &rArr; IIIlIIlIlI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIlIlI
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[106]"></a>IIIllIIII</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = IIIllIIII &rArr; IlIllIlIII &rArr; lIllllIl &rArr; IllIlIIII &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllIlIII
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlllIllI
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[107]"></a>IllIIIIII</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IllIIIIII &rArr; lIllIlll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllllIl
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIlllI
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIIIl
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIlI
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_movement_detection
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIlI
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIlIlIl
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hq_min_f
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hq_max_f
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[112]"></a>IlIIllIIl</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IlIIllIIl
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIlll
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIl
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIllIl
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIlIllI
</UL>

<P><STRONG><a name="[115]"></a>lllIlIlIll</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lllIlIlIll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIlIllI
</UL>

<P><STRONG><a name="[116]"></a>lIIIlIllI</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lIIIlIllI &rArr; lllIlIlIll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIlIlIll
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIIl
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[117]"></a>lIllIlIIlI</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = lIllIlIIlI &rArr; lllIIllIll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllIll
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[119]"></a>lIlIIIIll</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lIlIIIIll &rArr; lIllIIIIl &rArr; IlIIIIIIlI &rArr; IllIIIlllI &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllllllll
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIlIII
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[11d]"></a>lIllllIllI</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lIllllIllI &rArr; lIllIlll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hq_min_f
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[11e]"></a>lIIlIlIIII</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lIIlIlIIII &rArr; lllIIllI &rArr; asinf &rArr; __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lllIIllI
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIIlll
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIllIl
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIllIIl
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIllllIII
</UL>

<P><STRONG><a name="[11f]"></a>IlIllllIII</STRONG> (Thumb, 94 bytes, Stack size 232 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = IlIllllIII &rArr; llIlIIIIII &rArr; lIIIllllI &rArr; lllIlIlI &rArr; IlIllIIIl &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlIIIIII
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIlIlII
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlIIII
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[122]"></a>IIllIllIl</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IIllIllIl
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlII
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[123]"></a>IllIIIIlI</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = IllIIIIlI &rArr; lIllIlll &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIlll
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIllIlII
</UL>

<P><STRONG><a name="[124]"></a>IllllllIl</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = IllllllIl &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllII
</UL>

<P><STRONG><a name="[125]"></a>llIlllII</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = llIlllII &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIlIIllII
</UL>

<P><STRONG><a name="[126]"></a>lIlIIllII</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lIlIIllII &rArr; llIlllII &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIlllII
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllllIl
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlI
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlllIll
</UL>

<P><STRONG><a name="[109]"></a>hq_max_f</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hq_max_f
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[10a]"></a>hq_min_f</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hq_min_f
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllllIllI
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[12d]"></a>clip</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hr_data_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllllIIII
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllllI
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIIlll
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
</UL>

<P><STRONG><a name="[110]"></a>lIlIlIlIl</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lIlIlIlIl &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[111]"></a>IllllIIlI</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hr_data_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IllllIIlI &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIlIlII
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIIII
</UL>

<P><STRONG><a name="[133]"></a>llllllIII</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hr_phys_calc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llllllIII &rArr; lIIlIllI &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIllIIIl
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlllIl
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIllI
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIllll
</UL>

<P><STRONG><a name="[13b]"></a>float_to_int32</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = float_to_int32 &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[13f]"></a>llIIIIlllI</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = llIIIIlllI
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
</UL>

<P><STRONG><a name="[13c]"></a>lIIIllIll</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lIIIllIll &rArr; expf &rArr; __hardfp_expf
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlll
</UL>

<P><STRONG><a name="[13e]"></a>IIlIIIlll</STRONG> (Thumb, 638 bytes, Stack size 48 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = IIlIIIlll &rArr; lIIIllIll &rArr; expf &rArr; __hardfp_expf
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIll
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIlllI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[144]"></a>llllIIlll</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llllIIlll
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[140]"></a>IIlllIlIlI</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, initialisation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = IIlllIlIlI &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIlIIIlIIl
</UL>

<P><STRONG><a name="[150]"></a>IIllIIllI</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IIllIIllI &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
</UL>

<P><STRONG><a name="[151]"></a>IIIlIIIlll</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIIlIIIlll &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
</UL>

<P><STRONG><a name="[153]"></a>llllIllII</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = llllIllII
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIllIIll
</UL>

<P><STRONG><a name="[152]"></a>lIIIllIIll</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = lIIIllIIll &rArr; lIIlIlllI &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llllIllII
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlIIIlll
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIIllI
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIllIl
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIlIlllI
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIIlllI
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIlI
</UL>

<P><STRONG><a name="[154]"></a>IllllIllI</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IllllIllI &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIlI
</UL>

<P><STRONG><a name="[155]"></a>IlIlllllI</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IlIlllllI &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIlI
</UL>

<P><STRONG><a name="[156]"></a>IlIIIlIll</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IlIIIlIll &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIlI
</UL>

<P><STRONG><a name="[157]"></a>llIIlIllI</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, skin_detection.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llIIlIllI
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIlIIlI
</UL>

<P><STRONG><a name="[158]"></a>llllIIIll</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, skin_detection.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIIIIlIlII
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIIlllII
</UL>

<P><STRONG><a name="[163]"></a>IIIlIIlII</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIIlIIlII &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIlIl
</UL>

<P><STRONG><a name="[164]"></a>IllIIIlllI</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IllIIIlllI &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIIIIlI
</UL>

<P><STRONG><a name="[165]"></a>IlIIIIIIlI</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IlIIIIIIlI &rArr; IllIIIlllI &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIIIlllI
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
</UL>

<P><STRONG><a name="[166]"></a>IlIllIlll</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, kman_model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = IlIllIlll &rArr; IlIIIllIl
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIlIIIl
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IlIIIllIl
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
</UL>

<P><STRONG><a name="[16c]"></a>lllllIlIll</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kman_model.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lIllIIIIl
</UL>

<P><STRONG><a name="[169]"></a>sqr_f</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, kman_model.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIlIIll
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIllIlIlI
</UL>

<P><STRONG><a name="[171]"></a>lllllIllI</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, qr_rls_filter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lllllIllI
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llIIIIIll
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIIlllIll
</UL>

<P><STRONG><a name="[172]"></a>sqr_f</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, qr_rls_filter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sqr_f &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllIlIIII
</UL>

<P><STRONG><a name="[21e]"></a>_printf_core</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
